<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>无星的小窝</title>
    <link>http://blog.xingxiaowu.cn/</link>
    
    <atom:link href="http://blog.xingxiaowu.cn/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>一个么的前途的弟中弟</description>
    <pubDate>Wed, 28 Jun 2023 00:47:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>无星的前端之旅（二十七）——ts路径alias</title>
      <link>http://blog.xingxiaowu.cn/2023/05/21/%E6%97%A0%E6%98%9F%E7%9A%84%E5%89%8D%E7%AB%AF%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94ts%E8%B7%AF%E5%BE%84alias/</link>
      <guid>http://blog.xingxiaowu.cn/2023/05/21/%E6%97%A0%E6%98%9F%E7%9A%84%E5%89%8D%E7%AB%AF%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94ts%E8%B7%AF%E5%BE%84alias/</guid>
      <pubDate>Sun, 21 May 2023 14:22:00 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;好久没写前端的东西了，正好前段时间写&lt;code&gt;typescript&lt;/code&gt;时用&lt;code&gt;alias&lt;/code&gt;遇到了一些问题，今天来聊一聊。&lt;/p&gt;
&lt;h1 id=&quot;alias&quot;&gt;&lt;a href=&quot;#alias&quot; class=&quot;headerlink&quot; title=&quot;alias&quot;&gt;&lt;/a&gt;alias&lt;/h1&gt;&lt;p&gt;其实用web框架写应用的时候用的很多啊&lt;/p&gt;
&lt;p&gt;比如层级很深的时候&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; aa &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;../../../utils/index&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过配置&lt;code&gt;alias&lt;/code&gt;，比如把根目录配置成&lt;code&gt;@&lt;/code&gt;就会写成&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; aa &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;@/utils/index&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样&lt;/p&gt;
&lt;p&gt;具体的路径就不演示了，大家应该都能明白，都用过。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>好久没写前端的东西了，正好前段时间写<code>typescript</code>时用<code>alias</code>遇到了一些问题，今天来聊一聊。</p><h1 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h1><p>其实用web框架写应用的时候用的很多啊</p><p>比如层级很深的时候</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> aa <span class="keyword">from</span> <span class="string">&quot;../../../utils/index&quot;</span></span><br></pre></td></tr></table></figure><p>通过配置<code>alias</code>，比如把根目录配置成<code>@</code>就会写成</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> aa <span class="keyword">from</span> <span class="string">&quot;@/utils/index&quot;</span></span><br></pre></td></tr></table></figure><p>这样</p><p>具体的路径就不演示了，大家应该都能明白，都用过。</p><p>那么问题来了，在使用<code>web</code>应用的时候，大家都会搭配使用<code>webpack</code>，<code>vite</code>等打包工具</p><p>其实配置<code>alias</code>本质上是配置这些打包工具的</p><p>那么如果写的是个<code>node</code>项目呢？</p><p>如果是个<code>node</code>项目（不一定是服务端，也有可能是别的）不需要<code>webpack</code>等打包工具，该怎么办？</p><h1 id="方式一：module-alias"><a href="#方式一：module-alias" class="headerlink" title="方式一：module-alias"></a>方式一：<code>module-alias</code></h1><p><a href="https://github.com/ilearnio/module-alias">module-alias</a></p><p>从<code>readme</code>看通过配置相关内容到<code>package.json</code>里，即可完成。</p><p>但因为看上去有4年没有更新了，所以我并没有选择这个方式。</p><p>不过我在它的<code>issues</code>里发现了一些有意思的东西.</p><p><a href="https://github.com/ilearnio/module-alias/issues/113">issues#113</a></p><h1 id="方式二：package-json的imports"><a href="#方式二：package-json的imports" class="headerlink" title="方式二：package.json的imports"></a>方式二：<code>package.json</code>的<code>imports</code></h1><p>是的，没错，<code>package.json</code>可以配置重命名。</p><p>来源就是上述提到的<a href="https://github.com/ilearnio/module-alias/issues/113">issues#113</a></p><p>我们可以使用<code>imports</code>来重命名文件夹</p><p>不过它必须使用<code>#</code>开头，这和写<code>web</code>时习惯使用<code>@</code>开头有点区别</p><p>不过我还是挺喜欢<code>#</code>开头的，因为使用<code>@</code>的，还有带命名空间的<code>npm</code>库，我觉得很容易混淆。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">//....省略</span></span><br><span class="line">    <span class="attr">&quot;imports&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;#actions/*&quot;</span><span class="punctuation">:</span> <span class="string">&quot;src/actions/*&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;#utils/*&quot;</span><span class="punctuation">:</span> <span class="string">&quot;src/utils/*&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;#types/*&quot;</span><span class="punctuation">:</span> <span class="string">&quot;src/types/*&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;#config/*&quot;</span><span class="punctuation">:</span> <span class="string">&quot;src/config/*&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>既然是ts，那么当然免不了修改<code>tsconfig.json</code>配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tsconfig.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// ...省略</span></span><br><span class="line">     <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;#actions/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/actions/*&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;#utils/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/utils/*&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;#types/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/types/*&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;#config/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/config/*&quot;</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>好，截止到这里，你的开发工具（<code>vscode</code>）已经可以正常识别你的<code>import</code>语句了</p><p>但是使用<code>tsc</code>构建会发现，路径还是会报错。</p><p>再查看输出的文件，会发现<code>tsc</code>编译出来的<code>js</code>文件，居然没有按<code>我认为的</code>预期把路径替换！</p><p><a href="https://github.com/Microsoft/TypeScript/issues/5039">typescript/issues#5039</a>我们可以看到讨论很激烈</p><p>按<code>typescript</code>的设计，预期就不会替换，只会原样输出</p><p>那么问题来了，怎么修正呢？</p><h2 id="tsc-alias编译时使用"><a href="#tsc-alias编译时使用" class="headerlink" title="tsc-alias编译时使用"></a><code>tsc-alias</code>编译时使用</h2><p><a href="https://github.com/justkey007/tsc-alias">tsc-alias</a></p><p>修改一下打包命令</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// &quot;build&quot;: &quot;rm -rf dist &amp;&amp; tsc&quot;,</span></span><br><span class="line">        <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rm -rf dist &amp;&amp; tsc &amp;&amp; tsc-alias&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>是的，只需要在后面加个<code>tsc-alias</code>就可以了。</p><h2 id="tsconfig-paths开发时使用"><a href="#tsconfig-paths开发时使用" class="headerlink" title="tsconfig-paths开发时使用"></a><code>tsconfig-paths</code>开发时使用</h2><p><a href="https://github.com/dividab/tsconfig-paths">tsconfig-paths</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// &quot;start&quot;: &quot;ts-node ./src/index.ts&quot;</span></span><br><span class="line">        <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ts-node -r tsconfig-paths/register ./src/index.ts&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Over"><a href="#Over" class="headerlink" title="Over"></a>Over</h1>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/%E5%89%8D%E7%AB%AF/">前端</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/typescript/">typescript</category>
      
      <category domain="http://blog.xingxiaowu.cn/tags/alias/">alias</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2023/05/21/%E6%97%A0%E6%98%9F%E7%9A%84%E5%89%8D%E7%AB%AF%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94ts%E8%B7%AF%E5%BE%84alias/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的自动化之旅（三）——PlayWright配置项和常见问题</title>
      <link>http://blog.xingxiaowu.cn/2023/03/17/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94PlayWright%E6%8F%90%E4%BA%A4%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6/</link>
      <guid>http://blog.xingxiaowu.cn/2023/03/17/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94PlayWright%E6%8F%90%E4%BA%A4%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6/</guid>
      <pubDate>Fri, 17 Mar 2023 07:27:08 GMT</pubDate>
      
      <description>&lt;p&gt;这次我们来聊一聊&lt;code&gt;playwright&lt;/code&gt;的一些配置项&lt;/p&gt;
&lt;h1 id=&quot;一、登录保存数据&quot;&gt;&lt;a href=&quot;#一、登录保存数据&quot; class=&quot;headerlink&quot; title=&quot;一、登录保存数据&quot;&gt;&lt;/a&gt;一、登录保存数据&lt;/h1&gt;&lt;p&gt;网站每次都要登录，很烦，没必要&lt;/p&gt;
&lt;p&gt;所以我们登录之后，可以把&lt;code&gt;cookie&lt;/code&gt;或者&lt;code&gt;session&lt;/code&gt;什么的保存起来&lt;/p&gt;
&lt;p&gt;下次登录再把数据注入&lt;/p&gt;
&lt;p&gt;这样就不用再登录了&lt;/p&gt;
&lt;h2 id=&quot;1-先正常登录&quot;&gt;&lt;a href=&quot;#1-先正常登录&quot; class=&quot;headerlink&quot; title=&quot;1.先正常登录&quot;&gt;&lt;/a&gt;1.先正常登录&lt;/h2&gt;&lt;p&gt;就写代码登录&lt;/p&gt;
&lt;h2 id=&quot;2-保存数据&quot;&gt;&lt;a href=&quot;#2-保存数据&quot; class=&quot;headerlink&quot; title=&quot;2.保存数据&quot;&gt;&lt;/a&gt;2.保存数据&lt;/h2&gt;&lt;p&gt;通过&lt;code&gt;context.storageState&lt;/code&gt;保存数据到本地文件&lt;br&gt;例如：&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>这次我们来聊一聊<code>playwright</code>的一些配置项</p><h1 id="一、登录保存数据"><a href="#一、登录保存数据" class="headerlink" title="一、登录保存数据"></a>一、登录保存数据</h1><p>网站每次都要登录，很烦，没必要</p><p>所以我们登录之后，可以把<code>cookie</code>或者<code>session</code>什么的保存起来</p><p>下次登录再把数据注入</p><p>这样就不用再登录了</p><h2 id="1-先正常登录"><a href="#1-先正常登录" class="headerlink" title="1.先正常登录"></a>1.先正常登录</h2><p>就写代码登录</p><h2 id="2-保存数据"><a href="#2-保存数据" class="headerlink" title="2.保存数据"></a>2.保存数据</h2><p>通过<code>context.storageState</code>保存数据到本地文件<br>例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存登录状态</span></span><br><span class="line"> <span class="keyword">await</span> context.<span class="title function_">storageState</span>(&#123;</span><br><span class="line">     <span class="attr">path</span>: dirPath + <span class="string">&#x27;/auth/auth.json&#x27;</span>,</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><h2 id="3-回到初始化，生成brower时，通过文件注入"><a href="#3-回到初始化，生成brower时，通过文件注入" class="headerlink" title="3.回到初始化，生成brower时，通过文件注入"></a>3.回到初始化，生成brower时，通过文件注入</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> authState = <span class="built_in">require</span>(<span class="string">&#x27;../auth/auth.json&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> browser = <span class="keyword">await</span> chromium.<span class="title function_">launch</span>(&#123;</span><br><span class="line">        <span class="attr">headless</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// 使用edge浏览器</span></span><br><span class="line">        <span class="attr">channel</span>: <span class="string">&#x27;msedge&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> context = <span class="keyword">await</span> browser.<span class="title function_">newContext</span>(&#123;</span><br><span class="line">        <span class="attr">storageState</span>: authState ?? &#123;&#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> page = <span class="keyword">await</span> context.<span class="title function_">newPage</span>(&#123;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二、忽略不安全的https"><a href="#二、忽略不安全的https" class="headerlink" title="二、忽略不安全的https"></a>二、忽略不安全的https</h1><p>自签名证书，这个很常见。</p><p>很多情况下，使用自签名证书做测试环境或者内网环境的https，是一种非常常见且低成本的https方式。</p><p>但是自签名证书因为没有CA认证，浏览器会报非专用链接提示</p><p>playwright在访问此类地址时，也会有相同的提示，导致无法进行正常的自动化工作。</p><p>我们可以通过配置playwright的设置项，让浏览器默认忽略此类问题。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> browser = <span class="keyword">await</span> chromium.<span class="title function_">launch</span>(&#123;</span><br><span class="line">    <span class="attr">headless</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// 使用edge浏览器</span></span><br><span class="line">    <span class="attr">channel</span>: <span class="string">&#x27;msedge&#x27;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> context = <span class="keyword">await</span> browser.<span class="title function_">newContext</span>(&#123;</span><br><span class="line">    <span class="attr">storageState</span>: authState ?? &#123;&#125;,</span><br><span class="line">    <span class="comment">// 忽略https的问题</span></span><br><span class="line">    <span class="attr">ignoreHTTPSErrors</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> page = <span class="keyword">await</span> context.<span class="title function_">newPage</span>(&#123;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="三、上传文件"><a href="#三、上传文件" class="headerlink" title="三、上传文件"></a>三、上传文件</h1><p>有些网页流程中，需要上传文件。</p><p>例如发邮件时需要上传附件</p><p>这时候就有点犯难，因为上传文件的框，它不是网页，它是Windows程序</p><p>其实<code>playwright</code>对此已有处理，使用<code>fileChooser</code>即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 文件路径，绝对路径！</span><br><span class="line">const filePath = &#x27;xxxx&#x27;</span><br><span class="line">const fileChooserPromise = page.waitForEvent(&#x27;filechooser&#x27;);</span><br><span class="line">await page.click(&#x27;text=添加附件&#x27;);</span><br><span class="line">const fileChooser = await fileChooserPromise;</span><br><span class="line">await fileChooser.setFiles(filePath);</span><br></pre></td></tr></table></figure><h1 id="四、下载文件"><a href="#四、下载文件" class="headerlink" title="四、下载文件"></a>四、下载文件</h1><p>比如把文件下载在当前项目路径下等</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [download] = <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>([</span><br><span class="line">    <span class="comment">// 指定等待下载事件</span></span><br><span class="line">    page.<span class="title function_">waitForEvent</span>(<span class="string">&#x27;download&#x27;</span>),</span><br><span class="line">    <span class="comment">// 点击下载元素</span></span><br><span class="line">    mainFrame.<span class="title function_">locator</span>(<span class="string">&#x27;xpath=xxx&#x27;</span>).<span class="title function_">click</span>(),</span><br><span class="line">]);</span><br><span class="line"><span class="comment">// 获取文件下载路径</span></span><br><span class="line"><span class="comment">// const path = await download.path();</span></span><br><span class="line"><span class="comment">// 获取文件全称，含后缀</span></span><br><span class="line"><span class="comment">// const fileName = download.suggestedFilename();</span></span><br><span class="line"><span class="comment">// 自己设置文件名称</span></span><br><span class="line"><span class="keyword">const</span> fileName = <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line"><span class="comment">// 保存文件,参数为文件路径</span></span><br><span class="line"><span class="keyword">await</span> download.<span class="title function_">saveAs</span>(<span class="string">&#x27;filepath&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/PlayWright/">PlayWright</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/PlayWright/">PlayWright</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2023/03/17/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94PlayWright%E6%8F%90%E4%BA%A4%E9%80%89%E6%8B%A9%E6%96%87%E4%BB%B6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的自动化之旅（二）——PlayWright的一些常见问题</title>
      <link>http://blog.xingxiaowu.cn/2023/03/17/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94PlayWright%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <guid>http://blog.xingxiaowu.cn/2023/03/17/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94PlayWright%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Fri, 17 Mar 2023 07:27:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;好久没写&lt;code&gt;playwright&lt;/code&gt;的相关内容了，但最近用的还是挺多的，有些常见的问题，决定还是写下来。&lt;/p&gt;
&lt;h1 id=&quot;内网安装&quot;&gt;&lt;a href=&quot;#内网安装&quot; class=&quot;headerlink&quot; title=&quot;内网安装&quot;&gt;&lt;/a&gt;内网安装&lt;/h1&gt;&lt;p&gt;我所在的公司内网是不联网的，只有一个&lt;code&gt;npm私有源&lt;/code&gt;，并且上游源是需要通过审批才能更新的。&lt;/p&gt;
&lt;p&gt;说人话就是，有的包有，有的包没有，没有的包也没办法从上游源拉取。&lt;/p&gt;
&lt;p&gt;幸运的是，有&lt;code&gt;playwright&lt;/code&gt;的低版本。&lt;/p&gt;
&lt;p&gt;不幸的是，安装过程中需要安装若干浏览器内核，在内网是无法下载的。&lt;/p&gt;
&lt;p&gt;不过更幸运的是，在掘金随手点开的&lt;a href=&quot;https://juejin.cn/post/7096074759158366221&quot;&gt;一篇文章&lt;/a&gt;，看到有人提到了这个。&lt;/p&gt;
&lt;p&gt;对作者表示感谢。&lt;/p&gt;
&lt;p&gt;这里引用一下。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>好久没写<code>playwright</code>的相关内容了，但最近用的还是挺多的，有些常见的问题，决定还是写下来。</p><h1 id="内网安装"><a href="#内网安装" class="headerlink" title="内网安装"></a>内网安装</h1><p>我所在的公司内网是不联网的，只有一个<code>npm私有源</code>，并且上游源是需要通过审批才能更新的。</p><p>说人话就是，有的包有，有的包没有，没有的包也没办法从上游源拉取。</p><p>幸运的是，有<code>playwright</code>的低版本。</p><p>不幸的是，安装过程中需要安装若干浏览器内核，在内网是无法下载的。</p><p>不过更幸运的是，在掘金随手点开的<a href="https://juejin.cn/post/7096074759158366221">一篇文章</a>，看到有人提到了这个。</p><p>对作者表示感谢。</p><p>这里引用一下。</p><blockquote><p>在可以进行外网访问的电脑上，随便新建一个文件夹</p></blockquote><blockquote><p><code>npm i @playwright/test -D</code></p></blockquote><blockquote><p>如果你像我一样，是有版本限制的，请下载对应版本号的包，例如我这里用<code>1.24.3</code></p></blockquote><blockquote><p><code>npm i  @playwright/test@1.24.3 -D</code></p></blockquote><blockquote><p>再 <code>npx playwright@1.24.3 install</code></p></blockquote><blockquote><p>访问<code>C:\Users\用户名\AppData\Local\ms-playwright</code></p></blockquote><blockquote><p>压缩，然后到内网电脑的相同地址解压，再<code>npm install plawright@1.24.3</code>即可</p></blockquote><p>官方文档的<a href="https://playwright.dev/docs/ci#caching-browsers">地址</a></p><h1 id="操作iframe内的dom"><a href="#操作iframe内的dom" class="headerlink" title="操作iframe内的dom"></a>操作iframe内的dom</h1><p>先找到<code>iframe</code>的id,再通过<code>iframe</code>找到对应的dom</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> iframe = page.<span class="title function_">frameLocator</span>(<span class="string">&#x27;#my-iframe&#x27;</span>)</span><br><span class="line"><span class="keyword">await</span> iframe.<span class="title function_">locator</span>(<span class="string">&quot;selectro&quot;</span>).<span class="title function_">click</span>()</span><br></pre></td></tr></table></figure><h1 id="获取dom"><a href="#获取dom" class="headerlink" title="获取dom"></a>获取dom</h1><p>通过<code>locator</code>获取<code>.elementHandles()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> elements = <span class="keyword">await</span> page.<span class="title function_">locator</span>(<span class="string">&#x27;tr&#x27;</span>, &#123; <span class="attr">has</span>: page.<span class="title function_">locator</span>(<span class="string">&#x27;text=&#x27;</span> + text), <span class="attr">class</span>: <span class="string">&#x27;towntr&#x27;</span> &#125;).<span class="title function_">elementHandles</span>();</span><br><span class="line"><span class="comment">// 获取文字</span></span><br><span class="line"><span class="keyword">const</span> text = <span class="keyword">await</span> elements[<span class="number">0</span>].<span class="title function_">innerText</span>()</span><br></pre></td></tr></table></figure><h1 id="某些情况下输入框无法输入"><a href="#某些情况下输入框无法输入" class="headerlink" title="某些情况下输入框无法输入"></a>某些情况下输入框无法输入</h1><p>本来对于输入框，应该使用<code>page.fill()</code>去输入</p><p>但是总有一些奇奇怪怪的情况，无法输入</p><p>对于这种情况，我们可以通过<code>page.key</code>去操作键盘输入</p><p>例如我要输入账号密码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> account = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> page.<span class="property">keyboard</span>.<span class="title function_">insertText</span>(account);</span><br><span class="line"><span class="keyword">await</span> page.<span class="property">keyboard</span>.<span class="title function_">press</span>(<span class="string">&#x27;Tab&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pArray = password.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; pArray.<span class="property">length</span>; index ++)&#123;</span><br><span class="line">  <span class="keyword">const</span> element = <span class="title function_">pArray</span>(index)</span><br><span class="line">  <span class="keyword">await</span> page.<span class="property">keyboard</span>.<span class="title function_">down</span>(element);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/PlayWright/">PlayWright</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/PlayWright/">PlayWright</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2023/03/17/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94PlayWright%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的electron之旅（十五）—— electron访问iframe</title>
      <link>http://blog.xingxiaowu.cn/2023/03/05/%E6%97%A0%E6%98%9F%E7%9A%84electron%E4%B9%8B%E6%97%85%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%20electron%E8%AE%BF%E9%97%AEiframe/</link>
      <guid>http://blog.xingxiaowu.cn/2023/03/05/%E6%97%A0%E6%98%9F%E7%9A%84electron%E4%B9%8B%E6%97%85%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%20electron%E8%AE%BF%E9%97%AEiframe/</guid>
      <pubDate>Sun, 05 Mar 2023 11:32:54 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h2&gt;&lt;p&gt;一个偶然的情况，帮一个朋友写个小工具&lt;/p&gt;
&lt;p&gt;需要内嵌用到iframe，并使用document提取其中的一些dom元素&lt;/p&gt;
&lt;h2 id=&quot;二、报错&quot;&gt;&lt;a href=&quot;#二、报错&quot; class=&quot;headerlink&quot; title=&quot;二、报错&quot;&gt;&lt;/a&gt;二、报错&lt;/h2&gt;&lt;p&gt;好像是这个，记不清楚了=。=&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Blocked a frame with origin &amp;quot;***&amp;quot; form accessing a cross-origin frame.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;三、解决&quot;&gt;&lt;a href=&quot;#三、解决&quot; class=&quot;headerlink&quot; title=&quot;三、解决&quot;&gt;&lt;/a&gt;三、解决&lt;/h2&gt;&lt;p&gt;入口添加&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.&lt;span class=&quot;property&quot;&gt;commandLine&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;appendSwitch&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;disable-site-isolation-trials&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ***&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;BrowserWindow&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ***&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;webPreferences&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ***&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;nodeIntegration&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;contextIsolation&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;webSecurity&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;allowRunningInsecureContent&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;四、正常拿dom&quot;&gt;&lt;a href=&quot;#四、正常拿dom&quot; class=&quot;headerlink&quot; title=&quot;四、正常拿dom&quot;&gt;&lt;/a&gt;四、正常拿dom&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>一个偶然的情况，帮一个朋友写个小工具</p><p>需要内嵌用到iframe，并使用document提取其中的一些dom元素</p><h2 id="二、报错"><a href="#二、报错" class="headerlink" title="二、报错"></a>二、报错</h2><p>好像是这个，记不清楚了=。=</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Blocked a frame with origin &quot;***&quot; form accessing a cross-origin frame.</span><br></pre></td></tr></table></figure><h2 id="三、解决"><a href="#三、解决" class="headerlink" title="三、解决"></a>三、解决</h2><p>入口添加</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="property">commandLine</span>.<span class="title function_">appendSwitch</span>(<span class="string">&#x27;disable-site-isolation-trials&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ***</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="comment">// ***</span></span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">        <span class="comment">// ***</span></span><br><span class="line">      <span class="attr">nodeIntegration</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">webSecurity</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">allowRunningInsecureContent</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="四、正常拿dom"><a href="#四、正常拿dom" class="headerlink" title="四、正常拿dom"></a>四、正常拿dom</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Iframe</span> = ref&lt;<span class="title class_">HTMLIFrameElement</span> | <span class="literal">null</span>&gt;(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">iframeLoad</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 业务脱敏</span></span><br><span class="line">    <span class="title class_">Iframe</span>.<span class="property">value</span> = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;iframe&quot;</span>)</span><br><span class="line">    <span class="comment">// 非IE</span></span><br><span class="line">    <span class="title class_">Iframe</span>.<span class="property">value</span>!.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 获取document</span></span><br><span class="line">        <span class="keyword">let</span> <span class="attr">iframeDom</span>: <span class="title class_">HTMLIFrameElement</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;Iframe&#x27;</span>) <span class="keyword">as</span> <span class="title class_">HTMLIFrameElement</span></span><br><span class="line">        <span class="keyword">let</span> doc = iframeDom.<span class="property">contentDocument</span></span><br><span class="line">        <span class="keyword">const</span> time = doc?.<span class="title function_">querySelector</span>(<span class="string">&quot;xpath&quot;</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">iframeLoad</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="done"><a href="#done" class="headerlink" title="done"></a>done</h1>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/electron/">electron</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/electron/">electron</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2023/03/05/%E6%97%A0%E6%98%9F%E7%9A%84electron%E4%B9%8B%E6%97%85%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%20electron%E8%AE%BF%E9%97%AEiframe/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的electron之旅（十四）—— 裁包之去掉语言文件</title>
      <link>http://blog.xingxiaowu.cn/2023/03/05/%E6%97%A0%E6%98%9F%E7%9A%84electron%E4%B9%8B%E6%97%85%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94%20%E8%A3%81%E5%8C%85%E4%B9%8B%E5%8E%BB%E6%8E%89%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6/</link>
      <guid>http://blog.xingxiaowu.cn/2023/03/05/%E6%97%A0%E6%98%9F%E7%9A%84electron%E4%B9%8B%E6%97%85%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94%20%E8%A3%81%E5%8C%85%E4%B9%8B%E5%8E%BB%E6%8E%89%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6/</guid>
      <pubDate>Sun, 05 Mar 2023 10:32:54 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h2&gt;&lt;p&gt;很久没写bug了，最近写了一些业务上的小工具，因为包有点大，所以要裁一下。&lt;/p&gt;
&lt;p&gt;首选其实就是去掉不需要的语言文件&lt;/p&gt;
&lt;h2 id=&quot;二、如何实现&quot;&gt;&lt;a href=&quot;#二、如何实现&quot; class=&quot;headerlink&quot; title=&quot;二、如何实现&quot;&gt;&lt;/a&gt;二、如何实现&lt;/h2&gt;&lt;h3 id=&quot;2-1-添加默认语言&quot;&gt;&lt;a href=&quot;#2-1-添加默认语言&quot; class=&quot;headerlink&quot; title=&quot;2.1 添加默认语言&quot;&gt;&lt;/a&gt;2.1 添加默认语言&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;electron&lt;/code&gt;的入口文件添加&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.&lt;span class=&quot;property&quot;&gt;commandLine&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;appendSwitch&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;lang&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;zh-CN&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-2-在打包后的钩子处脚本删除&quot;&gt;&lt;a href=&quot;#2-2-在打包后的钩子处脚本删除&quot; class=&quot;headerlink&quot; title=&quot;2.2 在打包后的钩子处脚本删除&quot;&gt;&lt;/a&gt;2.2 在打包后的钩子处脚本删除&lt;/h3&gt;&lt;p&gt;比如我使用的是&lt;code&gt;electron-builder&lt;/code&gt;，可以在打包配置文件中找到&lt;code&gt;afterPack&lt;/code&gt;这个配置项&lt;/p&gt;
&lt;p&gt;配置读取的脚本文件如下：&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>很久没写bug了，最近写了一些业务上的小工具，因为包有点大，所以要裁一下。</p><p>首选其实就是去掉不需要的语言文件</p><h2 id="二、如何实现"><a href="#二、如何实现" class="headerlink" title="二、如何实现"></a>二、如何实现</h2><h3 id="2-1-添加默认语言"><a href="#2-1-添加默认语言" class="headerlink" title="2.1 添加默认语言"></a>2.1 添加默认语言</h3><p>在<code>electron</code>的入口文件添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="property">commandLine</span>.<span class="title function_">appendSwitch</span>(<span class="string">&#x27;lang&#x27;</span>, <span class="string">&#x27;zh-CN&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-2-在打包后的钩子处脚本删除"><a href="#2-2-在打包后的钩子处脚本删除" class="headerlink" title="2.2 在打包后的钩子处脚本删除"></a>2.2 在打包后的钩子处脚本删除</h3><p>比如我使用的是<code>electron-builder</code>，可以在打包配置文件中找到<code>afterPack</code>这个配置项</p><p>配置读取的脚本文件如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//build/hooks/afterPack.js</span></span><br><span class="line"><span class="comment">//参考 https://www.electron.build/configuration/configuration#afterpack</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">default</span> = <span class="keyword">async</span> <span class="keyword">function</span> (<span class="params">context</span>) &#123;</span><br><span class="line">    <span class="comment">//console.log(context)</span></span><br><span class="line">    <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> localeDir = context.<span class="property">appOutDir</span> + <span class="string">&#x27;/locales/&#x27;</span></span><br><span class="line"></span><br><span class="line">    fs.<span class="title function_">readdir</span>(localeDir, <span class="keyword">function</span> (<span class="params">err, files</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(files &amp;&amp; files.<span class="property">length</span>)) <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, len = files.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">const</span> match = files[i].<span class="title function_">match</span>(<span class="regexp">/zh-CN\.pak/</span>) <span class="comment">//只保留中文</span></span><br><span class="line">            <span class="keyword">if</span> (match === <span class="literal">null</span>) &#123;</span><br><span class="line">                fs.<span class="title function_">unlinkSync</span>(localeDir + files[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="done"><a href="#done" class="headerlink" title="done"></a>done</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.w3cways.com/2484.html">electron通过删除未使用的语言文件缩减打包后大小</a></p>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/electron/">electron</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/electron/">electron</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2023/03/05/%E6%97%A0%E6%98%9F%E7%9A%84electron%E4%B9%8B%E6%97%85%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94%20%E8%A3%81%E5%8C%85%E4%B9%8B%E5%8E%BB%E6%8E%89%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的饥荒（二）——Mod</title>
      <link>http://blog.xingxiaowu.cn/2022/10/03/%E6%97%A0%E6%98%9F%E7%9A%84%E9%A5%A5%E8%8D%92%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94Mod/</link>
      <guid>http://blog.xingxiaowu.cn/2022/10/03/%E6%97%A0%E6%98%9F%E7%9A%84%E9%A5%A5%E8%8D%92%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94Mod/</guid>
      <pubDate>Mon, 03 Oct 2022 08:52:04 GMT</pubDate>
      
      <description>&lt;p&gt;我们来讲讲,已经启动的服务器,怎么配置mod&lt;/p&gt;
&lt;h1 id=&quot;一-暂停饥荒服务&quot;&gt;&lt;a href=&quot;#一-暂停饥荒服务&quot; class=&quot;headerlink&quot; title=&quot;一.暂停饥荒服务&quot;&gt;&lt;/a&gt;一.暂停饥荒服务&lt;/h1&gt;&lt;p&gt;通过&lt;code&gt;netstat&lt;/code&gt;和&lt;code&gt;kill&lt;/code&gt;把服务器暂停先.&lt;/p&gt;
&lt;h1 id=&quot;二-解析各个文件夹&quot;&gt;&lt;a href=&quot;#二-解析各个文件夹&quot; class=&quot;headerlink&quot; title=&quot;二.解析各个文件夹&quot;&gt;&lt;/a&gt;二.解析各个文件夹&lt;/h1&gt;&lt;h2 id=&quot;1-dstsave&quot;&gt;&lt;a href=&quot;#1-dstsave&quot; class=&quot;headerlink&quot; title=&quot;1.dstsave&quot;&gt;&lt;/a&gt;1.&lt;code&gt;dstsave&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd /home/dstsave/dst/World1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;里面包含两个两个文件夹&lt;code&gt;Master``Caves&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;前面说过,&lt;code&gt;Master&lt;/code&gt;为主世界,&lt;code&gt;Caves&lt;/code&gt;为洞穴&lt;/p&gt;
&lt;p&gt;实际上两个文件夹里的内容都差不多,我们这里只说&lt;code&gt;mod&lt;/code&gt;相关配置&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 修改的话,最好Master和Caves两者同步修改,这里以Master为例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd Master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vim ./modoverrides.lua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>我们来讲讲,已经启动的服务器,怎么配置mod</p><h1 id="一-暂停饥荒服务"><a href="#一-暂停饥荒服务" class="headerlink" title="一.暂停饥荒服务"></a>一.暂停饥荒服务</h1><p>通过<code>netstat</code>和<code>kill</code>把服务器暂停先.</p><h1 id="二-解析各个文件夹"><a href="#二-解析各个文件夹" class="headerlink" title="二.解析各个文件夹"></a>二.解析各个文件夹</h1><h2 id="1-dstsave"><a href="#1-dstsave" class="headerlink" title="1.dstsave"></a>1.<code>dstsave</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/dstsave/dst/World1</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>里面包含两个两个文件夹<code>Master``Caves</code></p><p>前面说过,<code>Master</code>为主世界,<code>Caves</code>为洞穴</p><p>实际上两个文件夹里的内容都差不多,我们这里只说<code>mod</code>相关配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 修改的话,最好Master和Caves两者同步修改,这里以Master为例</span><br><span class="line">cd Master</span><br><span class="line">vim ./modoverrides.lua</span><br></pre></td></tr></table></figure><p><code>modoverrides.lua</code>实际上就是所有的<code>mod</code>配置信息。</p><p>要开关<code>mod</code>或者修改<code>mod</code>的<code>options</code>就在这个文件里修改。</p><p>开关见<code>enable</code></p><h3 id="问题：里面都是worker-数字，我怎么知道哪个数字是哪个mod"><a href="#问题：里面都是worker-数字，我怎么知道哪个数字是哪个mod" class="headerlink" title="问题：里面都是worker-数字，我怎么知道哪个数字是哪个mod"></a>问题：里面都是<code>worker-数字</code>，我怎么知道哪个数字是哪个mod</h3><p>如果你的所有的<code>mod</code>都是从<code>steam</code>创意工坊下载的，我们可以通过分享按钮查看id</p><p>例如：</p><p><img src="/images/%E9%A5%A5%E8%8D%922/1.png" alt="1.png"></p><p><img src="/images/%E9%A5%A5%E8%8D%922/2.png" alt="2.png"></p><p>那么我们就得到所有mod和id之间的对应关系。</p><h2 id="2-dstserver"><a href="#2-dstserver" class="headerlink" title="2.dstserver"></a>2.<code>dstserver</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/dstserver</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>其中包含一个<code>mods</code>文件夹，其中所有的<code>mod</code>都会下载在里面</p><p><code>mods</code>中存在一个名为<code>dedicated_server_mods_setup.lua</code>的文件</p><p>如果我们需要<code>新增</code>某个mod，则需要在其中新增</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServerModSetup(<span class="string">&quot;id&quot;</span>)</span><br></pre></td></tr></table></figure><p>例如：<code>ServerModSetup(&quot;362175979&quot;)</code></p><h1 id="三-修改mod"><a href="#三-修改mod" class="headerlink" title="三.修改mod"></a>三.修改mod</h1><p>经过第二步，应该就大致了解了。<br>先改<code>/home/dstsave/dst/World1/Master/modoverrides.lua</code><br>和<code>/home/dstsave/dst/World1/Caves/modoverrides.lua</code></p><p>如果是新增<code>Mod</code>，则往<code>/home/dstserver/mods/dedicated_server_mods_setup.lua</code>新增<code>ServerModSetup(&quot;id&quot;)</code></p><h1 id="四-神话书说"><a href="#四-神话书说" class="headerlink" title="四.神话书说"></a>四.神话书说</h1><p><code>神话书说</code>是个很有意思的mod，他分为<code>神话书说世界</code>和<code>神话书说人物</code></p><p>这里有个需要注意的地方，在带有<code>神话书说</code>这俩mod的世界<code>第一次</code>启动时</p><p>必须要先关闭<code>神话书说人物</code>，仅开启<code>神话书说世界</code></p><p>在<code>master_start.sh</code>启动成功后，关闭服务</p><p>再开启<code>神话书说人物</code>,再次启动<code>master_start.sh</code>,才能正常使用神话书说的人物</p><p>不然会因为顺序问题，人物加载失败，导致无法生成世界。</p>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/%E9%A5%A5%E8%8D%92/">饥荒</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/%E9%A5%A5%E8%8D%92/">饥荒</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2022/10/03/%E6%97%A0%E6%98%9F%E7%9A%84%E9%A5%A5%E8%8D%92%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94Mod/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的饥荒（一）——安装</title>
      <link>http://blog.xingxiaowu.cn/2022/10/03/%E6%97%A0%E6%98%9F%E7%9A%84%E9%A5%A5%E8%8D%92%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85/</link>
      <guid>http://blog.xingxiaowu.cn/2022/10/03/%E6%97%A0%E6%98%9F%E7%9A%84%E9%A5%A5%E8%8D%92%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85/</guid>
      <pubDate>Mon, 03 Oct 2022 07:52:04 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;一个朋友喜欢玩饥荒,但是总是一个人没意思&lt;/p&gt;
&lt;p&gt;联机版又不会搭房间,去淘宝租服务器一个月20起步&lt;/p&gt;
&lt;p&gt;本着友好助人的美好品德&lt;/p&gt;
&lt;p&gt;帮朋友买了台2G4H 4M的服务器,一年才260,房间我负责搭,平时闲置的服务器我随便用&lt;/p&gt;
&lt;p&gt;我可真是个乐于助人的好人&lt;/p&gt;
&lt;p&gt;我们先选Centos7,然后开动&lt;/p&gt;
&lt;h1 id=&quot;服务器安全组开放端口&quot;&gt;&lt;a href=&quot;#服务器安全组开放端口&quot; class=&quot;headerlink&quot; title=&quot;服务器安全组开放端口&quot;&gt;&lt;/a&gt;服务器安全组开放端口&lt;/h1&gt;&lt;p&gt;服务器安全组把&lt;code&gt;20-21&lt;/code&gt;,&lt;code&gt;60000-60100&lt;/code&gt;放开,&lt;code&gt;10998-10999&lt;/code&gt;为饥荒端口,也放开&lt;/p&gt;
&lt;h1 id=&quot;一-搭FTP&quot;&gt;&lt;a href=&quot;#一-搭FTP&quot; class=&quot;headerlink&quot; title=&quot;一.搭FTP&quot;&gt;&lt;/a&gt;一.搭FTP&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>一个朋友喜欢玩饥荒,但是总是一个人没意思</p><p>联机版又不会搭房间,去淘宝租服务器一个月20起步</p><p>本着友好助人的美好品德</p><p>帮朋友买了台2G4H 4M的服务器,一年才260,房间我负责搭,平时闲置的服务器我随便用</p><p>我可真是个乐于助人的好人</p><p>我们先选Centos7,然后开动</p><h1 id="服务器安全组开放端口"><a href="#服务器安全组开放端口" class="headerlink" title="服务器安全组开放端口"></a>服务器安全组开放端口</h1><p>服务器安全组把<code>20-21</code>,<code>60000-60100</code>放开,<code>10998-10999</code>为饥荒端口,也放开</p><h1 id="一-搭FTP"><a href="#一-搭FTP" class="headerlink" title="一.搭FTP"></a>一.搭FTP</h1><p>为啥要搭FTP,其实主要是为了方便上传和下载文件,<code>scp</code>多少还是有点麻烦了</p><h2 id="1-防火墙开放端口-不必关"><a href="#1-防火墙开放端口-不必关" class="headerlink" title="1.防火墙开放端口,不必关"></a>1.防火墙开放端口,不必关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --permanent --zone=public --add-service=ftp</span></span><br><span class="line"><span class="comment"># 开放常用端口</span></span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br><span class="line"><span class="comment"># 不行就重启一下</span></span><br><span class="line"><span class="comment"># systemctl restart firewalld.service</span></span><br></pre></td></tr></table></figure><h2 id="2-安装vsftpd"><a href="#2-安装vsftpd" class="headerlink" title="2.安装vsftpd"></a>2.安装vsftpd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd* -y</span><br></pre></td></tr></table></figure><h2 id="3-启动vsftpd"><a href="#3-启动vsftpd" class="headerlink" title="3.启动vsftpd"></a>3.启动vsftpd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm –ql vsftpd | more</span><br><span class="line">systemctl  restart   vsftpd.service</span><br><span class="line">ps   -ef |grep  vsftpd</span><br></pre></td></tr></table></figure><h2 id="4-配置"><a href="#4-配置" class="headerlink" title="4.配置"></a>4.配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf </span><br></pre></td></tr></table></figure><p>直接用我下面这个吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># 开启匿名访问</span><br><span class="line">anonymous_enable=NO</span><br><span class="line">#启用本地系统用户访问</span><br><span class="line">local_enable=YES</span><br><span class="line">#本地系统用户写入全县</span><br><span class="line">write_enable=YES</span><br><span class="line">#本地用户创建文件目录默认权限掩码</span><br><span class="line">local_umask=022</span><br><span class="line">#打印目录显示纤细，通常用于用户第一次访问目录时，信息提示</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line"># 启用上传/下载日志记录</span><br><span class="line">xferlog_enable=YES</span><br><span class="line"># ftp使用20端口进行数据传输</span><br><span class="line">connect_from_port_20=YES</span><br><span class="line">#chown_uploads=YES</span><br><span class="line">#chown_username=whoever</span><br><span class="line">#xferlog_file=/var/log/xferlog</span><br><span class="line">#日志文件根据xferlog的标准写入</span><br><span class="line">xferlog_std_format=YES</span><br><span class="line">#idle_session_timeout=600</span><br><span class="line">#data_connection_timeout=120</span><br><span class="line">#nopriv_user=ftpsecure</span><br><span class="line">#async_abor_enable=YES</span><br><span class="line">#ascii_upload_enable=YES</span><br><span class="line">#ascii_download_enable=YES</span><br><span class="line">#ftpd_banner=Welcome to blah FTP service.</span><br><span class="line">#deny_email_enable=YES</span><br><span class="line">#banned_email_file=/etc/vsftpd/banned_emails</span><br><span class="line">#ls_recurse_enable=YES</span><br><span class="line">#打开就对了</span><br><span class="line">listen=YES</span><br><span class="line">#关掉就完事</span><br><span class="line"># listen_ipv6=NO</span><br><span class="line">#登录ftp服务器根据/etc/pam.d/vsftpd内容认证</span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line">#Vsftpd.user_list和ftpusers配置文件离的用户禁止访问ftp</span><br><span class="line">userlist_enable=YES</span><br><span class="line">#设置vsftpd于tcp wrapper结合进行主机访问</span><br><span class="line">tcp_wrappers=YES</span><br><span class="line"></span><br><span class="line"># 被动模式</span><br><span class="line">pasv_enable=YES</span><br><span class="line">pasv_min_port=60000</span><br><span class="line">pasv_max_port=60100</span><br><span class="line"># 修改ftp默认目录</span><br><span class="line">local_root=/home</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">anon_root=/home/anon</span><br><span class="line"></span><br><span class="line">local_enable=YES</span><br><span class="line">write_enable=YES</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h2 id="5-启动ftp专用账号"><a href="#5-启动ftp专用账号" class="headerlink" title="5.启动ftp专用账号"></a>5.启动ftp专用账号</h2><p>这里照抄参考资料<a href="https://blog.csdn.net/D1179869625/article/details/122984871">Centos7 搭建FTP服务器</a></p><h3 id="新增账号"><a href="#新增账号" class="headerlink" title="新增账号"></a>新增账号</h3><p>本次计划目的添加一个管理员账号，使用管理员账号上传管理文件，匿名用户可以查看下载，但是没有其他权限。默认账号路径在/home下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd admin</span><br><span class="line"><span class="built_in">echo</span> admin12345|passwd --stdin admin</span><br></pre></td></tr></table></figure><h3 id="新建目录"><a href="#新建目录" class="headerlink" title="新建目录"></a>新建目录</h3><p><img src="/images/%E9%A5%A5%E8%8D%921/1png.png" alt="1.png"></p><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart vsftpsd</span><br></pre></td></tr></table></figure><h3 id="下载FileZilla"><a href="#下载FileZilla" class="headerlink" title="下载FileZilla"></a>下载<code>FileZilla</code></h3><p><a href="https://www.filezilla.cn/">https://www.filezilla.cn/</a></p><h3 id="使用FileZilla"><a href="#使用FileZilla" class="headerlink" title="使用FileZilla"></a>使用<code>FileZilla</code></h3><p>软件使用应该不用说了</p><h1 id="二-安装SteamCMD"><a href="#二-安装SteamCMD" class="headerlink" title="二.安装SteamCMD"></a>二.安装SteamCMD</h1><h2 id="1-安装SteamCMD所需库"><a href="#1-安装SteamCMD所需库" class="headerlink" title="1.安装SteamCMD所需库"></a>1.安装SteamCMD所需库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line"></span><br><span class="line">sudo yum -y install glibc.i686 libstdc++.i686 libcurl4-gnutls-dev.i686 libcurl.i686 screen</span><br></pre></td></tr></table></figure><h2 id="2-安装SteamCMD"><a href="#2-安装SteamCMD" class="headerlink" title="2.安装SteamCMD"></a>2.安装SteamCMD</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home &amp;&amp; <span class="built_in">mkdir</span> steamcmd &amp;&amp; <span class="built_in">cd</span> steamcmd</span><br><span class="line"></span><br><span class="line">wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvzf steamcmd_linux.tar.gz</span><br><span class="line"></span><br><span class="line">./steamcmd.sh</span><br></pre></td></tr></table></figure><h2 id="3-下载饥荒服务端"><a href="#3-下载饥荒服务端" class="headerlink" title="3.下载饥荒服务端"></a>3.下载饥荒服务端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先执行设置下载地址</span></span><br><span class="line">force_install_dir /home/dstserver</span><br><span class="line"><span class="comment"># 匿名登陆</span></span><br><span class="line">login anonymous</span><br><span class="line"><span class="comment"># 这里注意,使用的是update,如果存在,则更新,如果不存在,则下载</span></span><br><span class="line">app_update 343050 validate</span><br></pre></td></tr></table></figure><h2 id="4-解决libcurl-gnutls-so-4缺失问题"><a href="#4-解决libcurl-gnutls-so-4缺失问题" class="headerlink" title="4.解决libcurl-gnutls.so.4缺失问题"></a>4.解决<code>libcurl-gnutls.so.4</code>缺失问题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/lib/libcurl.so.4 /home/dstserver/bin/lib32/libcurl-gnutls.so.4</span><br></pre></td></tr></table></figure><h2 id="5-生成主世界-master-start-sh-和洞穴-cave-start-sh-命令"><a href="#5-生成主世界-master-start-sh-和洞穴-cave-start-sh-命令" class="headerlink" title="5.生成主世界(master_start.sh)和洞穴(cave_start.sh)命令"></a>5.生成主世界(master_start.sh)和洞穴(cave_start.sh)命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/dstserver/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;./dontstarve_dedicated_server_nullrenderer -console -persistent_storage_root /home/dstsave -conf_dir dst -cluster World1 -shard Master&quot;</span> &gt; master_start.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;./dontstarve_dedicated_server_nullrenderer -console -persistent_storage_root /home/dstsave -conf_dir dst -cluster World1 -shard Caves&quot;</span> &gt; cave_start.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x master_start.sh cave_start.sh</span><br></pre></td></tr></table></figure><h2 id="6-启动一次世界生成默认文件"><a href="#6-启动一次世界生成默认文件" class="headerlink" title="6.启动一次世界生成默认文件"></a>6.启动一次世界生成默认文件</h2><p>肯定链接失败,报没有token,这是预期内的,不用担心</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./master_start.sh</span><br></pre></td></tr></table></figure><p>启动完成后<code>Ctrl+C</code>关闭服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cave_start.sh</span><br></pre></td></tr></table></figure><p>启动完成后<code>Ctrl+C</code>关闭服务</p><p>此时可以看到<code>home</code>目录下生成了两个文件夹<code>dstsave</code>和<code>dstsever</code></p><p><code>dstsave</code>: 数据文件,里面包含世界,存档</p><p><code>dstsever</code>: 服务端文件</p><h2 id="7-在自己电脑上创建饥荒世界"><a href="#7-在自己电脑上创建饥荒世界" class="headerlink" title="7.在自己电脑上创建饥荒世界"></a>7.在自己电脑上创建饥荒世界</h2><p>创建完毕后,回到饥荒首页的左下角,有个游戏数据,点一下会打开本地文件夹,李米娜包含了刚刚创建的世界</p><p><code>Cluster_*</code>文件夹是世界数据,12345表示创建的第几个世界.</p><p>文件夹内包含</p><p><code>Master</code>:主世界配置<br><code>Caves</code>:洞穴配置<br><code>cluster.ini</code>:房间配置</p><p>我们要做的,就是通过<code>ftp</code>,将这些内容,放到服务器的<code>/home/dstsave/dst/World1</code>目录下.</p><h2 id="8-获取token"><a href="#8-获取token" class="headerlink" title="8.获取token"></a>8.获取token</h2><p>回到饥荒客户端首页,左下角有个叫<code>账户信息</code>的按钮,点击跳转<code>Klei</code>,点击<code>我的游戏</code>,再点击右上角<code>Don’t Strave Together Servers</code>,下方有个<code>添加新的服务器</code>,随便填个名字就行了,会得到一个<code>token</code>,复制这个<code>token</code></p><h2 id="9-在服务器上放置token"><a href="#9-在服务器上放置token" class="headerlink" title="9.在服务器上放置token"></a>9.在服务器上放置token</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/dstsave/dst/World1</span><br><span class="line">touch cluster_token.txt</span><br><span class="line">vim cluster_token.txt</span><br></pre></td></tr></table></figure><p>把<code>token</code>放进去</p><h1 id="三-启动饥荒"><a href="#三-启动饥荒" class="headerlink" title="三.启动饥荒"></a>三.启动饥荒</h1><h2 id="1-启动"><a href="#1-启动" class="headerlink" title="1.启动"></a>1.启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/dstserver/bin</span><br></pre></td></tr></table></figure><h2 id="2-screen命令"><a href="#2-screen命令" class="headerlink" title="2.screen命令"></a>2.<code>screen</code>命令</h2><p>通过<code>-R</code>启动一个容器,如果存在,则进入容器,如果不存在,则创建一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen -R master</span><br><span class="line">./master_start.sh</span><br></pre></td></tr></table></figure><p>如果没报错并且看到<code>Simple pause</code>就代表启动成功，按下<code>Ctrl+A</code>然后再按下<code>Ctrl+D</code>就可以让服务后台运行，并回到原来的控制台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">screen -R caves</span><br><span class="line"></span><br><span class="line">./cave_start.sh</span><br></pre></td></tr></table></figure><p>洞穴同理</p><p>要看<code>log</code>就继续使用<code>screen -R master</code>或者<code>screen -R caves</code></p><h2 id="3-查看端口"><a href="#3-查看端口" class="headerlink" title="3.查看端口"></a>3.查看端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 主世界</span><br><span class="line">netstat -nlp |grep :10999</span><br><span class="line"># 洞穴</span><br><span class="line">netstat -nlp |grep :10998</span><br></pre></td></tr></table></figure><p>关闭应用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 pid</span><br></pre></td></tr></table></figure><p>到这里为止,我们的饥荒已经成功启动了</p><p>下一篇我们来说mod<a href="2022/10/03/%E6%97%A0%E6%98%9F%E7%9A%84%E9%A5%A5%E8%8D%92%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94Mod">无星的饥荒（二）——Mod</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/D1179869625/article/details/122984871">Centos7 搭建FTP服务器</a></p><p><a href="https://zhuanlan.zhihu.com/p/146379848">饥荒搭建</a></p>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/%E9%A5%A5%E8%8D%92/">饥荒</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/%E9%A5%A5%E8%8D%92/">饥荒</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2022/10/03/%E6%97%A0%E6%98%9F%E7%9A%84%E9%A5%A5%E8%8D%92%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的自动化之旅（一）——PlayWright</title>
      <link>http://blog.xingxiaowu.cn/2022/09/11/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94PlayWright/</link>
      <guid>http://blog.xingxiaowu.cn/2022/09/11/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94PlayWright/</guid>
      <pubDate>Sun, 11 Sep 2022 07:27:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;工作上有些视频学习任务，一天到晚要看视频学习；&lt;/p&gt;
&lt;p&gt;关键还不能倍速，连播，非要手动点击下一个，非常苦恼。还时不时还跳一个弹窗出来，不回答就不继续播放，挂机都不行。&lt;/p&gt;
&lt;h1 id=&quot;技术选型&quot;&gt;&lt;a href=&quot;#技术选型&quot; class=&quot;headerlink&quot; title=&quot;技术选型&quot;&gt;&lt;/a&gt;技术选型&lt;/h1&gt;&lt;p&gt;&lt;code&gt;selenium&lt;/code&gt;，还用说吗？妥妥的大哥大&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PlayWright&lt;/code&gt;，微软的新生儿&lt;/p&gt;
&lt;p&gt;所以我选&lt;code&gt;PlayWright&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;在Linux上安装edge&quot;&gt;&lt;a href=&quot;#在Linux上安装edge&quot; class=&quot;headerlink&quot; title=&quot;在Linux上安装edge&quot;&gt;&lt;/a&gt;在Linux上安装edge&lt;/h1&gt;&lt;p&gt;问题来了，为什么要装&lt;code&gt;edge&lt;/code&gt;，&lt;code&gt;chrome&lt;/code&gt;不香么？&lt;/p&gt;
&lt;p&gt;但是有一个问题啊，通过&lt;code&gt;chromedriver&lt;/code&gt;调起来的是&lt;code&gt;chromium&lt;/code&gt;，&lt;code&gt;chromium&lt;/code&gt;默认不支持MP4封装h264编码的视频,默认只支持google自家的webm封装的VP9编码视频。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>工作上有些视频学习任务，一天到晚要看视频学习；</p><p>关键还不能倍速，连播，非要手动点击下一个，非常苦恼。还时不时还跳一个弹窗出来，不回答就不继续播放，挂机都不行。</p><h1 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h1><p><code>selenium</code>，还用说吗？妥妥的大哥大</p><p><code>PlayWright</code>，微软的新生儿</p><p>所以我选<code>PlayWright</code></p><h1 id="在Linux上安装edge"><a href="#在Linux上安装edge" class="headerlink" title="在Linux上安装edge"></a>在Linux上安装edge</h1><p>问题来了，为什么要装<code>edge</code>，<code>chrome</code>不香么？</p><p>但是有一个问题啊，通过<code>chromedriver</code>调起来的是<code>chromium</code>，<code>chromium</code>默认不支持MP4封装h264编码的视频,默认只支持google自家的webm封装的VP9编码视频。</p><p>这不是要命，我最主要的需求就是看视频。</p><p>所以我们选择edge</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在这里看可以安装的https://packages.microsoft.com/yumrepos/edge/</span><br><span class="line">sudo yum localinstall https://packages.microsoft.com/yumrepos/edge/microsoft-edge-stable-105.0.1343.27-1.x86_64.rpm</span><br><span class="line"># 可以使用看是否安装成功</span><br><span class="line">microsoft-edge --version</span><br></pre></td></tr></table></figure><h1 id="开启浏览器"><a href="#开启浏览器" class="headerlink" title="开启浏览器"></a>开启浏览器</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; chromium &#125; = <span class="built_in">require</span>(<span class="string">&#x27;playwright&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> browser = <span class="keyword">await</span> chromium.<span class="title function_">launch</span>(&#123;</span><br><span class="line">    <span class="comment">// 开发的时候写false，部署的时候使用true</span></span><br><span class="line">        <span class="attr">headless</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// 使用edge浏览器</span></span><br><span class="line">        <span class="attr">channel</span>: <span class="string">&#x27;msedge&#x27;</span>,</span><br><span class="line">        <span class="comment">// 默认开启控制台。不然无法自动播放视频</span></span><br><span class="line">        <span class="attr">devtools</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="通过XPath寻找dom"><a href="#通过XPath寻找dom" class="headerlink" title="通过XPath寻找dom"></a>通过XPath寻找dom</h1><p>好多兄弟问，XPath怎么搞，好难算，好复杂</p><p>说实话兄弟，根本不用自己写啊。。。。</p><p>举个栗子：<br><img src="/images/%E8%87%AA%E5%8A%A8%E5%8C%961/1.png" alt="1"></p><p>直接复制就行了。。。</p><h1 id="一些常用操作"><a href="#一些常用操作" class="headerlink" title="一些常用操作"></a>一些常用操作</h1><h3 id="1-聚焦input并输入"><a href="#1-聚焦input并输入" class="headerlink" title="1.聚焦input并输入"></a>1.聚焦<code>input</code>并输入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 我这里使用id聚焦</span></span><br><span class="line">page.<span class="title function_">fill</span>(<span class="string">&#x27;#id&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-点击按钮"><a href="#2-点击按钮" class="headerlink" title="2.点击按钮"></a>2.点击按钮</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用xpath</span></span><br><span class="line"><span class="keyword">await</span> page.<span class="title function_">click</span>(<span class="string">&#x27;xpath=//html/body/form/div[2]/div/div[1]/input[4]&#x27;</span>)</span><br><span class="line"><span class="comment">// 使用文字定位</span></span><br><span class="line"><span class="keyword">await</span> page.<span class="title function_">click</span>(<span class="string">&#x27;text=&#x27;</span> + <span class="string">&#x27;登录&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-等待某个dom节点渲染完成"><a href="#3-等待某个dom节点渲染完成" class="headerlink" title="3.等待某个dom节点渲染完成"></a>3.等待某个dom节点渲染完成</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例如我这里等待一张图片渲染完成后获取这个图片</span></span><br><span class="line"><span class="keyword">const</span> img0 = <span class="keyword">await</span> page.<span class="title function_">waitForSelector</span>(<span class="string">&#x27;id=Img0&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="4-获取所有可匹配成功的dom"><a href="#4-获取所有可匹配成功的dom" class="headerlink" title="4.获取所有可匹配成功的dom"></a>4.获取所有可匹配成功的dom</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在获取表格内所有列或者所有行时,尤为有效</span></span><br><span class="line"><span class="keyword">const</span> domlist = <span class="keyword">await</span> page.$$(<span class="string">&#x27;xpath=//*[@id=&quot;mian&quot;]/form/div/table/tbody/tr/td/table[2]/tbody/tr/td/table[1]/tbody/tr/td/table/tbody/tr/td[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/span&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="5-浏览器后退"><a href="#5-浏览器后退" class="headerlink" title="5.浏览器后退"></a>5.浏览器后退</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> page.<span class="title function_">goBack</span>()</span><br></pre></td></tr></table></figure><h3 id="6-拦截网络请求并替换结果"><a href="#6-拦截网络请求并替换结果" class="headerlink" title="6.拦截网络请求并替换结果"></a>6.拦截网络请求并替换结果</h3><p>在网络请求发起的页面,使用以下这个函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">forbidRequest</span> = <span class="keyword">async</span> (<span class="params">page</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 参数可以填请求地址或者正则表达式,例如:/aaa$/以aaa开头的请求</span></span><br><span class="line">    page.<span class="title function_">route</span>(<span class="string">&#x27;参数&#x27;</span>, <span class="keyword">async</span> route =&gt; &#123;</span><br><span class="line">        <span class="comment">// Fetch original response.</span></span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> page.<span class="property">request</span>.<span class="title function_">fetch</span>(route.<span class="title function_">request</span>());</span><br><span class="line">        <span class="comment">// Add a prefix to the title.</span></span><br><span class="line">        <span class="keyword">let</span> body = &#123;&#125;</span><br><span class="line">        <span class="comment">// 这里要注意,一定要转json字符串</span></span><br><span class="line">        <span class="keyword">const</span> result = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(body)</span><br><span class="line">        route.<span class="title function_">fulfill</span>(&#123;</span><br><span class="line">          <span class="comment">// Pass all fields from the response.</span></span><br><span class="line">          response,</span><br><span class="line">          <span class="comment">// Override response body.</span></span><br><span class="line">          <span class="attr">body</span>:result,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他基本没啥了,跟着官网看文档就好了.</p>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/PlayWright/">PlayWright</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/PlayWright/">PlayWright</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2022/09/11/%E6%97%A0%E6%98%9F%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%B9%8B%E6%97%85%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94PlayWright/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Postman批量请求并保存请求结果</title>
      <link>http://blog.xingxiaowu.cn/2022/09/06/Postman%E6%89%B9%E9%87%8F%E8%AF%B7%E6%B1%82%E5%B9%B6%E4%BF%9D%E5%AD%98%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C/</link>
      <guid>http://blog.xingxiaowu.cn/2022/09/06/Postman%E6%89%B9%E9%87%8F%E8%AF%B7%E6%B1%82%E5%B9%B6%E4%BF%9D%E5%AD%98%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C/</guid>
      <pubDate>Tue, 06 Sep 2022 09:24:00 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;现在基本不怎么写代码了，偶尔会用技术去辅助业务。&lt;/p&gt;
&lt;p&gt;这次业务上碰到这样一个问题，要去采集客户系统的数据信息，之前是相关业务人员一页一页查，然后复制粘贴，所以我们使用postman进行批量请求，并保存结果&lt;/p&gt;
&lt;h2 id=&quot;1-设置请求变化参数&quot;&gt;&lt;a href=&quot;#1-设置请求变化参数&quot; class=&quot;headerlink&quot; title=&quot;1.设置请求变化参数&quot;&gt;&lt;/a&gt;1.设置请求变化参数&lt;/h2&gt;&lt;p&gt;假设前期的请求已经设置好了，那么接下来就是设置变化的参数&lt;/p&gt;
&lt;p&gt;其实肥肠简单，只要把相关参数设置为&lt;code&gt;&amp;#123;&amp;#123;参数名&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/postman1/1.png&quot; alt=&quot;配置&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-放置待变化的参数，数组类型&quot;&gt;&lt;a href=&quot;#2-放置待变化的参数，数组类型&quot; class=&quot;headerlink&quot; title=&quot;2.放置待变化的参数，数组类型&quot;&gt;&lt;/a&gt;2.放置待变化的参数，数组类型&lt;/h2&gt;&lt;h3 id=&quot;2-1打开Run&quot;&gt;&lt;a href=&quot;#2-1打开Run&quot; class=&quot;headerlink&quot; title=&quot;2.1打开Run&quot;&gt;&lt;/a&gt;2.1打开&lt;code&gt;Run&lt;/code&gt;&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>现在基本不怎么写代码了，偶尔会用技术去辅助业务。</p><p>这次业务上碰到这样一个问题，要去采集客户系统的数据信息，之前是相关业务人员一页一页查，然后复制粘贴，所以我们使用postman进行批量请求，并保存结果</p><h2 id="1-设置请求变化参数"><a href="#1-设置请求变化参数" class="headerlink" title="1.设置请求变化参数"></a>1.设置请求变化参数</h2><p>假设前期的请求已经设置好了，那么接下来就是设置变化的参数</p><p>其实肥肠简单，只要把相关参数设置为<code>&#123;&#123;参数名&#125;&#125;</code></p><p>如下图</p><p><img src="/images/postman1/1.png" alt="配置"></p><h2 id="2-放置待变化的参数，数组类型"><a href="#2-放置待变化的参数，数组类型" class="headerlink" title="2.放置待变化的参数，数组类型"></a>2.放置待变化的参数，数组类型</h2><h3 id="2-1打开Run"><a href="#2-1打开Run" class="headerlink" title="2.1打开Run"></a>2.1打开<code>Run</code></h3><p><img src="/images/postman1/2.png" alt="配置"></p><h3 id="2-2勾选相关配置"><a href="#2-2勾选相关配置" class="headerlink" title="2.2勾选相关配置"></a>2.2勾选相关配置</h3><p>勾选需要进行批量请求的接口，并将需要变化的值用数组的方式写在json文件里，<code>select file</code>选择相关文件</p><p>例如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//aaa.json</span><br><span class="line">[&#123;</span><br><span class="line">    aaa:123,</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    aaa:456,</span><br><span class="line">&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当然也可以用<code>xlxs</code>等文件，这里就不做详解，开发常用的还是<code>json</code></p><p><img src="/images/postman1/3.png" alt="勾选内容"></p><h3 id="点击Run，此时会发现，看不到请求任何结果-。"><a href="#点击Run，此时会发现，看不到请求任何结果-。" class="headerlink" title="点击Run，此时会发现，看不到请求任何结果=。="></a>点击Run，此时会发现，看不到请求任何结果=。=</h3><h2 id="3-填写Test"><a href="#3-填写Test" class="headerlink" title="3.填写Test"></a>3.填写Test</h2><p>其实关键就是填写<code>Test</code>，通过<code>Test</code>将请求结果打印出来，或者只打印自己要的参数</p><p><code>Test</code>是填写测试用的，可以用来测试请求结果符合预期，就像写单元测试一样</p><p><img src="/images/postman1/4.png" alt="test"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pm.test(pm.response.json().data.XINGMING+&quot;,&quot;+pm.response.json().data.ZHENGJIANYXQ+&quot;,&quot;+pm.response.json().data.LIANXIFS+&quot;,&quot;+pm.response.json().data.HUJIDDWMC+&quot;,&quot;+pm.response.json().data.XIANCHANGZD,function ()&#123;</span><br><span class="line">    console.log(responseBody)</span><br><span class="line">    console.log(pm.response.body)</span><br><span class="line">    pm.expect(pm.response.text()).to.include(&quot;XINGMING&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="4-再次run，等待请求结束，导出结果"><a href="#4-再次run，等待请求结束，导出结果" class="headerlink" title="4.再次run，等待请求结束，导出结果"></a>4.再次run，等待请求结束，导出结果</h2><p><img src="/images/postman1/5.png" alt="导出"></p><p><img src="/images/postman1/6.png" alt="结果"></p>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/Postman/">Postman</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/Postman/">Postman</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2022/09/06/Postman%E6%89%B9%E9%87%8F%E8%AF%B7%E6%B1%82%E5%B9%B6%E4%BF%9D%E5%AD%98%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>无星的党员学习笔记（六） —— 辛亥革命</title>
      <link>http://blog.xingxiaowu.cn/2022/05/16/%E6%97%A0%E6%98%9F%E7%9A%84%E5%85%9A%E5%91%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/</link>
      <guid>http://blog.xingxiaowu.cn/2022/05/16/%E6%97%A0%E6%98%9F%E7%9A%84%E5%85%9A%E5%91%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/</guid>
      <pubDate>Mon, 16 May 2022 09:15:00 GMT</pubDate>
      
      <description>&lt;p&gt;最近在读党史，记录一些随笔。&lt;/p&gt;
&lt;p&gt;孙中山先生是一位伟大的爱国主义者，也是中国民主革命的伟大先行者。&lt;/p&gt;
&lt;p&gt;三民主义由民族主义（Principles of Nationalism）、民权主义（Principles of Democracy）和民生主义（Principles of People’s Livelihood）组成。&lt;/p&gt;
&lt;p&gt;三民主义是孙中山先生民主思想的精髓和高度概括。&lt;/p&gt;
&lt;p&gt;孙中山先生创立的中国同盟会，以“驱除鞑虏，恢复中华，创立民国，平均地权”的十六字革命纲领，首次提出了要以资产阶级民主共和国取代封建王朝的革命目标。&lt;/p&gt;
&lt;p&gt;在同盟会成立后，革命党人开始了宣传工作，并积极联络军队，先后发起了一系列武装起义。如：广东潮州黄冈起义，惠州七女湖起义，广州起义等。这些奇艺虽然实质上是脱离人民群众的单纯军事行动，因而很快失败，但它反映了资产阶级革命党人反封建的精神，在全国不断扩大了影响力。&lt;/p&gt;
&lt;p&gt;最终，以湖北新军为主力，发起的武昌起义获得了全国各省的积极响应，迅速推翻了清王朝，建立了中华民国。&lt;/p&gt;
&lt;p&gt;1912年1月1日，孙中山在南京就任中华民国第一任临时大总统，发布《中华民国临时约法》，并颁布了多项新的政策政令，如：改国号为中华民国，不再跪拜，不再留长发，女子不再裹小脚等。反映出以孙中山先生为首的资产阶级革命派除旧布新，矢志共和的革命精神。&lt;/p&gt;
&lt;p&gt;辛亥革命的成功，在于它推翻了清王朝的封建统治，结束了中国几千年的君主专制制度，推动了中国人民思想解放。为中国的先进分子探索救国救民的道路，拓宽了视野，为中国的进步潮流打开了阀门。&lt;/p&gt;
&lt;p&gt;但辛亥革命也有弱点，没能提出明确的反帝反封建的革命纲领，加上帝国主义和封建势力在当时的力量强大，导致南京临时政府仅存在三个月，就被以袁世凯为代表的北洋军阀窃取了革命成果。因此从根本上讲，辛亥革命，既未能产出帝国主义和封建势力在中国的根基，也没能改变中国半殖民地半封建的社会性质。从这个角度看，辛亥革命并未成功。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>最近在读党史，记录一些随笔。</p><p>孙中山先生是一位伟大的爱国主义者，也是中国民主革命的伟大先行者。</p><p>三民主义由民族主义（Principles of Nationalism）、民权主义（Principles of Democracy）和民生主义（Principles of People’s Livelihood）组成。</p><p>三民主义是孙中山先生民主思想的精髓和高度概括。</p><p>孙中山先生创立的中国同盟会，以“驱除鞑虏，恢复中华，创立民国，平均地权”的十六字革命纲领，首次提出了要以资产阶级民主共和国取代封建王朝的革命目标。</p><p>在同盟会成立后，革命党人开始了宣传工作，并积极联络军队，先后发起了一系列武装起义。如：广东潮州黄冈起义，惠州七女湖起义，广州起义等。这些奇艺虽然实质上是脱离人民群众的单纯军事行动，因而很快失败，但它反映了资产阶级革命党人反封建的精神，在全国不断扩大了影响力。</p><p>最终，以湖北新军为主力，发起的武昌起义获得了全国各省的积极响应，迅速推翻了清王朝，建立了中华民国。</p><p>1912年1月1日，孙中山在南京就任中华民国第一任临时大总统，发布《中华民国临时约法》，并颁布了多项新的政策政令，如：改国号为中华民国，不再跪拜，不再留长发，女子不再裹小脚等。反映出以孙中山先生为首的资产阶级革命派除旧布新，矢志共和的革命精神。</p><p>辛亥革命的成功，在于它推翻了清王朝的封建统治，结束了中国几千年的君主专制制度，推动了中国人民思想解放。为中国的先进分子探索救国救民的道路，拓宽了视野，为中国的进步潮流打开了阀门。</p><p>但辛亥革命也有弱点，没能提出明确的反帝反封建的革命纲领，加上帝国主义和封建势力在当时的力量强大，导致南京临时政府仅存在三个月，就被以袁世凯为代表的北洋军阀窃取了革命成果。因此从根本上讲，辛亥革命，既未能产出帝国主义和封建势力在中国的根基，也没能改变中国半殖民地半封建的社会性质。从这个角度看，辛亥革命并未成功。</p><p>尽管如此，辛亥革命仍然是中国人民为改变自己命运而崛起的一个伟大起点，后续的革命者们从辛亥革命未能解决中国所面临的基本问题这一事实中逐渐意识到，在中国半殖民地半封建社会的历史条件下，建立资产阶级民主共和国是不可能的，必须另外探索救国救民的新道路。</p>]]></content:encoded>
      
      
      <category domain="http://blog.xingxiaowu.cn/categories/%E5%85%9A%E5%91%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">党员学习笔记</category>
      
      
      <category domain="http://blog.xingxiaowu.cn/tags/%E5%85%9A%E5%91%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">党员学习笔记</category>
      
      
      <comments>http://blog.xingxiaowu.cn/2022/05/16/%E6%97%A0%E6%98%9F%E7%9A%84%E5%85%9A%E5%91%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
